// **All Subsets**

// **Problem Statement**
// You are given a string **S** containing **unique characters**. Your task is to print all **non-empty subset strings** of the string **in lexicographically increasing order**.

// A **subset string** of a string **S** is a string that can be generated by **deleting zero or more characters** from **S** and concatenating the remaining characters **in the original order**.

// ---

// **Input**
// A single line containing a string **S** of unique lowercase English letters.

// **Output**
// Print all **non-empty subset strings** of **S**, one per line, in **lexicographically increasing order**.

// ---

// **Constraints**

// * 1 ≤ |S| ≤ 12
// * S contains only lowercase English letters and all characters are **unique**.

// ---

// **Example 1**
// **Input:**

// ```
// abc
// ```

// **Output:**

// ```
// a
// ab
// abc
// ac
// b
// bc
// c
// ```

// **Example 2**
// **Input:**

// ```
// sob
// ```

// **Output:**

// ```
// b
// o
// ob
// s
// sb
// so
// sob
// ```


#include <bits/stdc++.h>
using namespace std;

string s;
vector<string>res;

void call(int idx){
    if(idx==s.size()) return;
    int n=res.size();
    for(int i=0;i<n;i++){
        res.push_back(res[i]+s[idx]);
    }
    call(idx+1);
}

int main() {
    cin>>s;
    res.push_back("");
    string str;
    str+=s[0];
    res.push_back(str);
    call(1);
    sort(res.begin(),res.end());
    for(int i=1;i<res.size();i++){
        cout<<res[i]<<endl;
    }
    return 0;
}